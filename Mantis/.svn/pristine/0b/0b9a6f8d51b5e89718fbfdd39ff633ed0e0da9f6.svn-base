<?php
# MantisBT - A PHP based bugtracking system

# MantisBT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# MantisBT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.

/**
 * View all bug page
 *
 * @package MantisBT
 * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
 * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net
 * @link http://www.mantisbt.org
 *
 * @uses core.php
 * @uses authentication_api.php
 * @uses compress_api.php
 * @uses config_api.php
 * @uses current_user_api.php
 * @uses filter_api.php
 * @uses gpc_api.php
 * @uses html_api.php
 * @uses lang_api.php
 * @uses print_api.php
 * @uses project_api.php
 * @uses user_api.php
 */

require_once( 'core.php' );
require_api( 'authentication_api.php' );
require_api( 'compress_api.php' );
require_api( 'config_api.php' );
require_api( 'current_user_api.php' );
require_api( 'filter_api.php' );
require_api( 'gpc_api.php' );
require_api( 'html_api.php' );
require_api( 'lang_api.php' );
require_api( 'print_api.php' );
require_api( 'project_api.php' );
require_api( 'user_api.php' );

require_js( 'bugFilter.js' );
require_css('bootstrap-datetimepicker-4.17.47.min.css');
require_css( 'status_config.php' );


$f_page_number		= gpc_get_int( 'page_number', 1 );
$t_project_id		= gpc_get_int( 'project_id', ALL_PROJECTS );

if($t_project_id == ALL_PROJECTS){
    # Get Project Id and set it as current
    $t_project_id = gpc_get_int( 'project_id', helper_get_current_project() );
}
if( ( ALL_PROJECTS == $t_project_id || project_exists( $t_project_id ) ) && $t_project_id != helper_get_current_project() ) {
	helper_set_current_project( $t_project_id );
	# Reloading the page is required so that the project browser
	# reflects the new current project
	print_header_redirect( $_SERVER['REQUEST_URI'], true, false, true );
}

$t_per_page = null;
$t_bug_count = null;
$t_page_count = null;
// 根据filter筛选找出所有问题
$t_rows = filter_get_bug_rows( $f_page_number, $t_per_page, $t_page_count, $t_bug_count, null, null, null, true );
if( $t_rows === false ) {
	print_header_redirect( 'view_all_set.php?type=0' );
}
$t_bugslist = array();
$t_unique_user_ids = array();
$t_unique_project_ids = array();
$t_row_count = count( $t_rows );
for( $i=0; $i < $t_row_count; $i++ ) {
	array_push( $t_bugslist, $t_rows[$i]->id );
	$t_project_id = $t_rows[$i]->project_id;
	$t_unique_project_ids[$t_project_id] = $t_project_id;
    //项目的已花费标准测试工时
    $t_query = "SELECT SUM(reality_work_hours) AS take_work_hours FROM {user_work_log} WHERE task_bug_id=" . db_param() . "  GROUP BY task_bug_id";
    $t_result = db_query( $t_query, array( (int)$t_rows[$i]->id ) );
    $t_rows[$i]->work_hours = db_result( $t_result );
    if($t_rows[$i]->work_hours === false) $t_rows[$i]->work_hours = '0.00';
}
gpc_set_cookie( config_get_global( 'bug_list_cookie' ), implode( ',', $t_bugslist ) );

compress_enable();

# don't index view issues pages
html_robots_noindex();

layout_page_header_begin( lang_get( 'view_bugs_link' ) );

$t_refresh_delay = current_user_get_pref( 'refresh_delay' );
if( $t_refresh_delay > 0 ) {
	$t_query = '?';

	if( $f_page_number > 1 )  {
		$t_query .= 'page_number=' . $f_page_number . '&';
	}

	$t_query .= 'refresh=true';

	html_meta_redirect( 'view_all_bug_page.php' . $t_query, $t_refresh_delay * 60 );
}

layout_page_header();
layout_page_begin( 'manage_overview_page.php' );

define( 'VIEW_ALL_INC_ALLOW', true );

include( dirname( __FILE__ ) . DIRECTORY_SEPARATOR . 'view_all_inc.php' );

layout_page_end();
