<?php
# MantisBT - A PHP based bugtracking system

# MantisBT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# MantisBT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Create a project
 *
 * @package MantisBT
 * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
 * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net
 * @link http://www.mantisbt.org
 *
 * @uses core.php
 * @uses access_api.php
 * @uses authentication_api.php
 * @uses config_api.php
 * @uses constant_inc.php
 * @uses current_user_api.php
 * @uses event_api.php
 * @uses form_api.php
 * @uses gpc_api.php
 * @uses html_api.php
 * @uses lang_api.php
 * @uses print_api.php
 * @uses project_api.php
 * @uses project_hierarchy_api.php
 */

require_once( 'core.php' );
require_api( 'access_api.php' );
require_api( 'authentication_api.php' );
require_api('bug_template_api.php');
require_api( 'config_api.php' );
require_api( 'constant_inc.php' );
require_api( 'current_user_api.php' );
require_api( 'event_api.php' );
require_api( 'form_api.php' );
require_api( 'gpc_api.php' );
require_api( 'html_api.php' );
require_api( 'lang_api.php' );
require_api( 'print_api.php' );
require_api( 'project_api.php' );
require_api( 'project_hierarchy_api.php' );
// 表单验证
form_security_validate( 'manage_proj_create' );

auth_reauthenticate();
access_ensure_global_level( config_get( 'create_project_threshold' ) );

$f_name 		= gpc_get_string( 'name' );
// 获取项目编号
$f_proj_no      = gpc_get_string('proj_no', '');
$f_description 	= gpc_get_string( 'description' );
$f_view_state	= gpc_get_int( 'view_state' );
$f_status		= gpc_get_int( 'status' );
$f_file_path	= gpc_get_string( 'file_path', '' );
$f_inherit_global = gpc_get_bool( 'inherit_global', 0 );
$f_inherit_parent = gpc_get_bool( 'inherit_parent', 0 );

$f_need_working_hours_day	= gpc_get_string( 'need_working_hours_day', '' );
$f_need_working_hours_people	= gpc_get_string( 'need_working_hours_people', '' );
$f_develop_working_hours_day	= gpc_get_string( 'develop_working_hours_day', '' );
$f_develop_working_hours_people	= gpc_get_string( 'develop_working_hours_people', '' );
$f_test_working_hours_day	 = gpc_get_string( 'test_working_hours_day', '');
$f_test_working_hours_people = gpc_get_string( 'test_working_hours_people', '' );
$f_owner_user_id = gpc_get_int( 'owner_user_id', '' );
$f_req_evaluate_user_id = gpc_get_int( 'req_evaluate_user_id', '' );
$f_dev_evaluate_user_id = gpc_get_int( 'dev_evaluate_user_id', '' );
$f_test_evaluate_user_id = gpc_get_int( 'test_evaluate_user_id', '' );

$f_parent_id	= gpc_get_int( 'parent_id', 0 );

if( 0 != $f_parent_id ) {
	project_ensure_exists( $f_parent_id );
}


# 签订时间
$sign_time = strtotime(gpc_get_string('sign_time'));
$sign_time = ($sign_time == null ? 0 : $sign_time);
# 上线提交时间
$submit_time = strtotime(gpc_get_string('submit_time'));
$submit_time = ($submit_time == null ? 0 : $submit_time);

$t_project_id = project_create( strip_tags( $f_name ), $f_proj_no, $f_description, $f_status, $f_view_state, $f_file_path, true, $f_inherit_global,$f_need_working_hours_day,$f_need_working_hours_people,$f_develop_working_hours_day,$f_develop_working_hours_people,$f_test_working_hours_day,$f_test_working_hours_people);

// 接收bug_ids
if(isset($_POST['bug_template_ids']) && !empty($_POST['bug_template_ids'])) {
    // 将选中的bug的时间和项目id改下
//    foreach($_POST['bug_template_ids'] as $bug_template_id) {
//        bug_set_field($bug_id, 'last_updated', time());
//        bug_set_field($bug_id, 'evaluate_time', time());
//        bug_set_field($bug_id, 'project_id', $t_project_id);
//    }

    // 获取分类对应模版列表
//    $bug_template_id_list = getBugTemplatesByCategory($_POST['bug_template_category_id']);
//    foreach($bug_id_list as $bug_id) {
//        if(!in_array($bug_id, $_POST['bug_ids'])) {
//            bug_delete($bug_id);
//        }
//    }
    // 创建问题
    createBugsByTemplates($_POST['bug_template_ids'], $t_project_id, $f_owner_user_id);
}


//  mantis_project_ext  项目额外的表
project_create_ext( $t_project_id, $f_owner_user_id, $f_need_working_hours_day, $f_develop_working_hours_day,$f_test_working_hours_day,$f_req_evaluate_user_id,$f_dev_evaluate_user_id,$f_test_evaluate_user_id, $sign_time, $submit_time   );



if( ( $f_view_state == VS_PRIVATE ) && ( false === current_user_is_administrator() ) ) {
	$t_access_level = access_get_global_level();
	$t_current_user_id = auth_get_current_user_id();
	project_add_user( $t_project_id, $t_current_user_id, $t_access_level );
}

if( 0 != $f_parent_id ) {
	project_hierarchy_add( $t_project_id, $f_parent_id, $f_inherit_parent );
}

event_signal( 'EVENT_MANAGE_PROJECT_CREATE', array( $t_project_id ) );

form_security_purge( 'manage_proj_create' );

$t_redirect_url = 'manage_proj_page.php';

layout_page_header( null, $t_redirect_url );

layout_page_begin( 'manage_overview_page.php' );

html_operation_successful( $t_redirect_url );

layout_page_end();
